{"version":3,"sources":["script.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","selector","targetDate","intervalId","startTime","setInterval","currentTime","Date","now","countTime","updateClockface","getTimeComponents","clearInterval","time","pad","Math","floor","value","String","padStart","timer","textContent","countTimer"],"mappings":";AAqEC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EArED,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAGzBI,EAAAA,WAEgC,SAAA,EAAA,GAAvBC,IAAAA,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAa,EAAA,KAAA,GAC7BC,KAAAA,WAAa,KACbF,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EAyDrB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aArDY,MAAA,WAAA,IAAA,EAAA,KACHE,EAAY,KAAKF,WAElBC,KAAAA,WAAaE,YAAY,WACtBC,IAAAA,EAAcC,KAAKC,MACnBC,EAAYL,EAAYE,GAE9BI,EADa,EAAKC,kBAAkBF,IAGhCA,GAAa,KACfG,cAAc,EAAKT,YAEnBO,EADa,EAAKC,kBAAkB,MAIrC,OAsCN,CAAA,IAAA,oBAlCqBE,MAAAA,SAAAA,GAOT,MAAA,CAACnB,KALG,KAAKoB,IAAIC,KAAKC,MAAMH,EAAQ,QAKzBhB,MAJF,KAAKiB,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAI7Cf,KAHV,KAAKgB,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAGjCd,KAFhB,KAAKe,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SA6B3D,CAAA,IAAA,MArBKI,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAoBpC,EA9DKnB,GA+CAoB,EAAQ,IAAIpB,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIK,KAAK,kBAOvB,SAASG,EAA2C,GAA1BhB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAKjCL,OAJVD,EAAKC,KAAK2B,YAAc3B,EACxBD,EAAKI,MAAMwB,YAAcxB,EACzBJ,EAAKK,KAAKuB,YAAcvB,EACxBL,EAAKM,KAAKsB,YAActB,EACdL,GAAAA,OAAAA,EAAQG,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,GAPrCqB,EAAME","file":"script.77b2924c.js","sourceRoot":"..","sourcesContent":["const refs = {\r\n  days: document.querySelector('[data-value=\"days\"]'),\r\n  hours: document.querySelector('[data-value=\"hours\"]'),\r\n  mins: document.querySelector('[data-value=\"mins\"]'),\r\n  secs: document.querySelector('[data-value=\"secs\"]')\r\n}\r\n\r\nclass CountdownTimer {\r\n  \r\n  constructor({selector, targetDate}) {\r\n    this.intervalId = null;\r\n    this.selector = selector;\r\n    this.targetDate = targetDate;\r\n   }\r\n \r\n\r\ncountTimer() {\r\n    const startTime = this.targetDate;\r\n\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = Date.now()\r\n      const countTime = startTime - currentTime\r\n      const time = this.getTimeComponents(countTime)\r\n      updateClockface(time)\r\n\r\n      if (countTime <= 0) {\r\n        clearInterval(this.intervalId)\r\n        const time = this.getTimeComponents(0)\r\n        updateClockface(time)\r\n      }\r\n     \r\n    }, 1000);\r\n  \r\n  }\r\n\r\n    getTimeComponents(time) {\r\n\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n      \r\n      return {days, hours, mins, secs}\r\n      }\r\n  \r\n  /*\r\n   * Принимает число, приводит к строке и добавляет в начало 0 если число меньше 2-х знаков\r\n   */\r\n  pad(value) {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n}\r\n\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jan 01, 2021'),\r\n  //targetDate: new Date('Oct 25, 2020'),\r\n\r\n});\r\n\r\ntimer.countTimer()\r\n\r\nfunction updateClockface({days, hours, mins, secs}) {\r\n  refs.days.textContent = days; \r\n  refs.hours.textContent = hours; \r\n  refs.mins.textContent = mins; \r\n  refs.secs.textContent = secs; \r\n  return `${days}:${hours}:${mins}:${secs}`\r\n}\r\n"]}